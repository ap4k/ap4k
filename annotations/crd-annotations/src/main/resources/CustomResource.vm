#set ($attributes = $model.attributes)
#foreach ($key in $attributes.keySet())
  #if ($key.getName().equals("CUSTOM_RESOURCE_CONFIG"))
    #set ($config = $attributes.get($key))
    #set ($group = $config.group)
    #set ($version = $config.version)
    #set ($kind = $config.kind)
    #set ($modelPackage = $config.modelPackage)
  #end
#end

package ${model.packageName};

import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.databind.JsonDeserializer.None;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import javax.validation.Valid;
import javax.validation.constraints.NotNull;
import io.fabric8.kubernetes.api.model.HasMetadata;
import io.fabric8.kubernetes.api.model.ObjectMeta;
import io.fabric8.kubernetes.api.model.validators.CheckObjectMeta;
import io.sundr.builder.annotations.Buildable;
import java.util.HashMap;
import java.util.Map;

@JsonInclude(Include.NON_NULL)
@JsonPropertyOrder({"apiVersion", "kind", "metadata", "spec", "status"})
@JsonDeserialize(
using = None.class
)
@Buildable(builderPackage = "io.fabric8.kubernetes.api.builder")
public class ${kind} implements HasMetadata  {

@NotNull
@JsonProperty("apiVersion")
private String apiVersion = "$group/$version";
@NotNull
@JsonProperty("kind")
private String kind = "$kind";
@JsonProperty("metadata")
@Valid
@CheckObjectMeta(
regexp = "^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$",
max = 253
)
private ObjectMeta metadata;
@JsonProperty("spec")
@Valid
private ${model.name} spec;
@JsonProperty("status")
@Valid
private ${kind}Status status;
@JsonIgnore
private Map
<String, Object> additionalProperties = new HashMap();


public $kind() {
}

public $kind(String apiVersion, String kind, ObjectMeta metadata, ${model.name} spec, ${kind}Status status) {
this.apiVersion = apiVersion;
this.kind = kind;
this.metadata = metadata;
this.spec = spec;
this.status = status;
}

@JsonProperty("apiVersion")
public String getApiVersion() {
return this.apiVersion;
}

@JsonProperty("apiVersion")
public void setApiVersion(String apiVersion) {
this.apiVersion = apiVersion;
}

@JsonProperty("kind")
public String getKind() {
return this.kind;
}

@JsonProperty("kind")
public void setKind(String kind) {
this.kind = kind;
}

@JsonProperty("metadata")
public ObjectMeta getMetadata() {
return this.metadata;
}

@JsonProperty("metadata")
public void setMetadata(ObjectMeta metadata) {
this.metadata = metadata;
}

@JsonProperty("spec")
public ${model.name} getSpec() {
return this.spec;
}

@JsonProperty("spec")
public void setSpec(${model.name} spec) {
this.spec = spec;
}

@JsonProperty("status")
public ${kind}Status getStatus() {
return this.status;
}

@JsonProperty("status")
public void setStatus(${kind}Status status) {
this.status = status;
}

@JsonAnyGetter
public Map
<String, Object> getAdditionalProperties() {
return this.additionalProperties;
}

@JsonAnySetter
public void setAdditionalProperty(String name, Object value) {
this.additionalProperties.put(name, value);
}

}
